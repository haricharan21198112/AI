from collections import deque

def bfs(graph, start):
    visited = set()
    queue = deque([start])
    order = []

    while queue:
        node = queue.popleft()
        if node not in visited:
            visited.add(node)
            order.append(node)
            for neighbor in graph.get(node, []):
                if neighbor not in visited:
                    queue.append(neighbor)
    return order

# ðŸ”½ Input
n = int(input("Enter number of nodes: "))
graph = {}

print("Enter the adjacency list:")
for _ in range(n):
    line = input("Node and its neighbors (e.g., A B C): ").split()
    graph[line[0]] = line[1:]

start_node = input("Enter the starting node: ")

# ðŸ”¼ Output
print("BFS Traversal:")
print(' -> '.join(bfs(graph, start_node)))
